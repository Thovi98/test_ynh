#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_nodejs --nodejs_version=$nodejs_version

# Upgrade NPM
ynh_npm install --global npm@latest

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/build"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..."

chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R $app:www-data "$data_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

# Configure redis
redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app="$app" --key=redis_db --value="$redis_db"

ynh_add_config --template="../conf/.env" --destination="$install_dir/.env"
chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# BUILDING APP
#=================================================
ynh_script_progression --message="Building the app..."

ynh_script_progression --message="Building the app server..."
pushd "$install_dir/build/server"
    ynh_use_nodejs
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" ci
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" run build
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" prune --omit=dev --omit=optional
popd

ynh_script_progression --message="Building the app api..."
pushd "$install_dir/build/open-api/typescript-sdk"
    ynh_use_nodejs
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" ci
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" run build
popd

ynh_script_progression --message="Building the app web..."
pushd "$install_dir/build/web"
    ynh_use_nodejs
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" ci
    #ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" "$ynh_npm" run build
popd

pushd "$install_dir/build/"
mkdir -p $install_dir/app/
cp -a -r server/node_modules server/dist server/bin $install_dir/app/
#cp -a -r web/build $install_dir/app/web
cp -a -r server/resources server/package.json server/package-lock.json $install_dir/app/
cp -a server/start*.sh $install_dir/app/
popd

pushd "$install_dir/app/"
ynh_exec_warn_less npm cache clean --force
popd

mkdir -p "$install_dir/app/machine-learning"
python 3 -m venv $install_dir/app/machine-learning/venv
source $install_dir/app/machine-learning/venv/bin/activate
ynh_exec_warn_less pip install --upgrade pip poetry

pushd "$install_dir/app/machine-learning/"
ynh_exec_warn_less poetry install --no-root --with dev --with cpu
popd

pushd "$install_dir/build/"
cp -a -r machine-learning/ann machine-learning/start.sh machine-learning/app $install_dir/app/machine-learning/
popd

push "$install_dir/app/"
ynh_npm install sharp
popd

#setup upload directory
ln -s $data_dir/uploads $install_dir
ln -s $data_dir/uploads $install_dir/app/machine-learning/

# Use 127.0.0.1 for microservices
sed -i -e "s@app.listen(port)@app.listen(port, '127.0.0.1')@g" $install_dir/app/dist/microservices/main.js

#custom start.sh script
ynh_add_config --template="../conf/start-ml.sh" --destination="$install_dir/app/machine-learning/start-ml.sh"
chmod +x "$install_dir/start-ml.sh"
chown $app:$app "$install_dir/start-ml.sh"

ynh_secure_remove --file="$install_dir/build"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."

# Create a dedicated systemd config
ynh_add_systemd_config --service="$app-server" --template="immich-server.service"
ynh_add_systemd_config --service="$app-machine-learning" --template="immich-machine-learning.service"
ynh_add_systemd_config --service="$app-microservices" --template="immich-microservices.service"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..."

mkdir -p "/var/log/$app"
chown -R $app:$app "/var/log/$app"
# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add "$app-server" --log="/var/log/$app/$app.log"
yunohost service add "$app-machine-learning" --log="/var/log/$app/machine-learning.log"
yunohost service add "$app-microservices" --log="/var/log/$app/microservices.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name="$app-server" --action="start" --log_path="/var/log/$app/$app.log"
ynh_systemd_action --service_name="$app-machine-learning" --action="start" --log_path="/var/log/$app/machine-learning.log"
ynh_systemd_action --service_name="$app-microservices" --action="start" --log_path="/var/log/$app/microservices.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
